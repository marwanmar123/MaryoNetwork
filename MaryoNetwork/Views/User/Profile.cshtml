@model MaryoNetwork.ViewModels.ProfileViewModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager


@{
    string fullName = null;
    string id = null;
    bool isOnligne = false;
    if (SignInManager.IsSignedIn(User))
    {
        User user = await UserManager.FindByEmailAsync(User.Identity.Name);
        if (user != null)
        {
            fullName = user.FullName;
            id = user.Id;
            isOnligne = user.IsOnline;
        }


    }
}

@{
    ViewData["Title"] = "Profile";
}

<div class="profile-page tx-13">
    <div class="row">
        <div class="col-12 grid-margin">
            <div class="profile-header">
                <div class="cover">
                    <figure>
                        <img class="w-100" src="https://bootdey.com/img/Content/bg1.jpg" alt="profile cover">
                    </figure>
                    <div class="cover-body d-flex justify-content-between align-items-center">
                        <div>
                            @if (Model.User.ProfilePicture != null)
                            {
                                <img class="profile-pic" src="data:image/*;base64,@Convert.ToBase64String(Model.User.ProfilePicture)">
                            }
                            else
                            {
                                <img class="profile-pic" src="~/image/defaultProfile.png">
                            }
                            <span class="profile-name">@Model.User.FullName</span>
                        </div>
                        <div class="d-none d-md-block">
                            @if (ViewBag.requestFriend == null)
                            {
                                <form method="post" asp-controller="User" asp-action="Addfriend">
                                    <input type="hidden" name="ReceiverId" value="@Model.User.Id" />
                                    <button type="submit" class="btn btn-xs btn-outline-primary">Add Friend</button>
                                </form>
                            }else if (ViewBag.waitFriend == true)
                            {
                                <p>waiting approving friendly</p>
                            }else if (ViewBag.isFriend == true)
                            {
                                <p>isfriend</p>
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="d-flex flex-row justify-content-between">
        <div class="card pb-2 m-2">
            <h5>About : </h5>
            <p style="background-color: #f4f2f2; border-radius:10px;" class="p-2" >@Model.User.About</p>
            <h5>Email : </h5>
            <p style="background-color: #f4f2f2; border-radius: 10px;" class="p-2" >@Model.User.Email</p>
            <h5>Phone : </h5>
            <p style="background-color: #f4f2f2; border-radius: 10px;" class="p-2" >@Model.User.PhoneNumber</p>
            <h5>Country : </h5>
            <p style="background-color: #f4f2f2; border-radius: 10px;" class="p-2" >@Model.User.Country</p>
            <h5>Linkedin : </h5>
            <a style="background-color: #f4f2f2; border-radius: 10px;" class="p-2"  href="@Model.User.Linkedin" target="_blank">@Model.User.Linkedin</a>
            <h5>Facebook : </h5>
            <a style="background-color: #f4f2f2; border-radius: 10px;" class="p-2" href="@Model.User.Facebook" target="_blank">@Model.User.Facebook</a>
            <h5>Github : </h5>
            <a style="background-color: #f4f2f2; border-radius: 10px;" class="p-2"  href="@Model.User.Github" target="_blank">@Model.User.Github</a>
        </div>
        <div>
            @foreach (var user in Model.Users)
            {
                @foreach (var post in user.Posts)
                {
                    <div class="card pb-2 m-2">
                        <div class="d-flex justify-content-between p-2 px-3">
                            <div class="d-flex flex-row align-items-center">
                                @if (post.User.ProfilePicture != null)
                                {
                                    if (post.User.IsOnline == true)
                                    {
                                        <img class="profile-actif" style="width:50px;" src="data:image/*;base64,@Convert.ToBase64String(post.User.ProfilePicture)">

                                    }
                                    else
                                    {
                                        <img class="rounded-circle" style="width:50px;" src="data:image/*;base64,@Convert.ToBase64String(post.User.ProfilePicture)">

                                    }
                                }
                                else
                                {
                                    if (post.User.IsOnline == true)
                                    {
                                        <img class="profile-actif" src="~/image/defaultProfile.png">

                                    }
                                    else
                                    {

                                        <img style="width:40px;height:40px; object-fit:cover; border-radius:30px" src="~/image/defaultProfile.png">
                                    }
                                }
                                <div class="d-flex flex-column ml-2">
                                    <a asp-controller="User" asp-action="Profile" asp-route-id="@post.UserId" class="font-weight-bold text-light">@post.User.FullName</a>
                                    <small class="mr-2 text-dark">@post.CreatedOn</small>
                                </div>
                            </div>
                        </div>
                        <div>
                            <p class="text-justify ml-5">@post.Content</p>
                        </div>
                        <div class="contentImg">
                            @if (post.Images.Count == 1)
                            {
                                @foreach (var f in post.Images)
                                {
                                    <img class="w-100" src="data:image/*;base64,@Convert.ToBase64String(f.Data)">
                                }



                            }
                            else
                            {
                                @foreach (var f in post.Images)
                                {
                                    <img class="imgPost" src="data:image/*;base64,@Convert.ToBase64String(f.Data)">
                                }
                            }

                        </div>
                        <div class="p-2">

                            <div class="d-flex justify-content-between align-items-center">
                                <div class="d-flex flex-row align-items-center muted-color">
                                    <img src="~/image/like.png" />
                                    <span>@post.Likes.Count()</span>
                                </div>
                                <div class="d-flex flex-row muted-color">
                                    <a asp-controller="Post" asp-action="Index" asp-route-id="@post.CategoryId">@post.Category.Name</a>
                                </div>
                                <div class="d-flex flex-row muted-color">
                                    <img src="~/image/comment.png" />
                                    <span>@post.Comments.Count() comments</span>
                                </div>
                            </div>
                            <hr style="background-color: gray">
                            <div class="comments">
                                @foreach (var i in post.Comments)
                                {
                                    <div class="d-flex flex-row mb-2">
                                        <a asp-controller="User" asp-action="Profile" asp-route-id="@i.UserId">
                                            @if (i.User.ProfilePicture != null)
                                            {
                                                <img style="width:40px;height:40px; object-fit:cover; border-radius:30px" src="data:image/*;base64,@Convert.ToBase64String(i.User.ProfilePicture)">
                                            }
                                            else
                                            {
                                                <img style="width:40px;height:40px; object-fit:cover; border-radius:30px" src="~/image/defaultProfile.png">
                                            }
                                        </a>
                                        <div class="d-flex flex-column ml-2">
                                            <a asp-controller="User" asp-action="Profile" asp-route-id="@i.UserId" class="name">@i.User.FullName</a> <small class="comment-text">@i.Content</small>
                                            <div class="d-flex align-items-center text-dark"> <small>@i.CreatedOn</small></div>
                                        </div>
                                    </div>
                                }

                            </div>
                        </div>
                    </div>
                }
            }
        </div>
        <div class="card pb-2 m-2">
            <h3>Photos</h3>
            <div class="d-flex flex-wrap justify-content-between p-2">
                @foreach (var img in Model.User.Images)
                {
                    <img class="w-25" style="width:30px;" src="data:image/*;base64,@Convert.ToBase64String(img.Data)">
                }
            </div>
            <hr />
            <h3>Friends</h3>
            <div>
                @foreach (var item in Model.User.FriendRequestReceived)
                {
                <div class="d-flex">
                    @if (item != null && item.RequestStatusId == "1" && item.SenderId == Model.User.Id)
                    {
                        @if (item.Receiver.ProfilePicture != null)
                        {
                            <img class="rounded-circle" style="width: 40px; height: 40px;" src="data:image/*;base64,@Convert.ToBase64String(item.Receiver.ProfilePicture)">
                        }
                        else
                        {
                            <img class="rounded-circle" style="width: 40px; height: 40px;" src="~/image/defaultProfile.png">
                        }
                        <p>==> @item.Receiver.FullName</p>
                    }
                    @if (item != null && item.RequestStatusId == "1" && item.ReceiverId == Model.User.Id)
                    {
                        @if (item.Sender.ProfilePicture != null)
                        {
                            <img class="rounded-circle" style="width: 40px; height: 40px;" src="data:image/*;base64,@Convert.ToBase64String(item.Sender.ProfilePicture)">
                        }
                        else
                        {
                            <img class="rounded-circle" style="width: 40px; height: 40px;" src="~/image/defaultProfile.png">
                        }
                        <p>@item.Sender.FullName ==></p>
                    }
                </div>
                }
                @foreach (var item in Model.User.FriendRequestSent)
                {
            <div class="d-flex">
                @if (item != null && item.RequestStatusId == "1" && item.SenderId == Model.User.Id)
                {
                    @if (item.Receiver.ProfilePicture != null)
                    {
                        <img class="rounded-circle" style="width: 40px; height: 40px;" src="data:image/*;base64,@Convert.ToBase64String(item.Receiver.ProfilePicture)">
                    }
                    else
                    {
                        <img class="rounded-circle" style="width: 40px; height: 40px;" src="~/image/defaultProfile.png">
                    }
                    <p>==> @item.Receiver.FullName</p>
                }
                @if (item != null && item.RequestStatusId == "1" && item.ReceiverId == Model.User.Id)
                {
                    @if (item.Sender.ProfilePicture != null)
                    {
                        <img class="rounded-circle" style="width: 40px; height: 40px;" src="data:image/*;base64,@Convert.ToBase64String(item.Sender.ProfilePicture)">
                    }
                    else
                    {
                        <img class="rounded-circle" style="width: 40px; height: 40px;" src="~/image/defaultProfile.png">
                    }
                    <p>@item.Sender.FullName ==></p>
                }
            </div>
                }
            </div>
            <hr />
            <h3>Groups</h3>
            <div class="d-flex justify-content-between ">
                @if (Model.User.Members.Where(a => a.UserId == Model.User.Id) != null)
                {
                    <div class="d-flex flex-wrap justify-content-center" style="max-width:100%;">
                        @foreach (var group in Model.User.Members)
                        {
                            <div class="p-1 m-1" style="background-color: #B6B6B6;">
                                <img style="max-width:100px; max-height:75px;" class="rounded" src="data:image/*;base64,@Convert.ToBase64String(group.Group.Image)">
                                <p class="text-dark">@group.Group.Name</p>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p>Nothings</p>
                }
            </div>
        </div>
    </div>
</div>
























            



