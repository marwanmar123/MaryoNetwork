@model MaryoNetwork.Models.Groups.Group
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    string fullName = null;
    string id = null;
    if (SignInManager.IsSignedIn(User))
    {
        User user = await UserManager.FindByEmailAsync(User.Identity.Name);
        if (user != null)
        {
            fullName = user.FullName;
            id = user.Id;
        }
    }

}

@{
    ViewData["Title"] = "Details";
}

<div class="profile-page tx-13">
    <div class="row">
        <div class="col-12 grid-margin">
            <div class="profile-header">
                <div class="cover">
                    <figure>
                        <img class="w-100" src="https://bootdey.com/img/Content/bg1.jpg" alt="profile cover">
                    </figure>
                    <div class="cover-body d-flex justify-content-between align-items-center">
                        <div class="d-flex flex-row">
                            @if (Model.User.ProfilePicture != null)
                            {
                                <img class="profile-pic" src="data:image/*;base64,@Convert.ToBase64String(Model.Image)">
                            }
                            else
                            {
                                <img class="profile-pic" src="~/image/defaultProfile.png">
                            }
                            @if (Model.UserId == id)
                            {
                                <form method="post" asp-action="EditGroupName">
                                    <input type="text" name="nameGroup" class="bg-transparent text-light border-0" value="@Model.Name" />
                                    <input type="hidden" name="groupId" value="@Model.Id" />
                                </form>
                            }
                            else
                            {
                                <span class="profile-name">@Model.Name</span>
                            }

                        </div>
                        <div class="d-none d-md-block">
                            @if (Model.Members.SingleOrDefault(a => a.GroupId == Model.Id && a.UserId == id) == null)
                            {
                                <form method="post" asp-controller="Groups" asp-action="Follow">
                                    <input type="hidden" name="GroupId" value="@Model.Id" />
                                    <button type="submit" class="btn btn-xs btn-primary m-2">Follow</button>
                                </form>
                            }
                            else
                            {
                                @foreach (var member in Model.Members.Where(a => a.UserId == id))
                                {
                                    <form method="post" asp-controller="Groups" asp-action="Quitter">
                                        <input type="hidden" name="Id" value="@member.Id" />
                                        <button type="submit" class="btn btn-xs btn-danger m-2">Quiiter</button>
                                    </form>
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="d-flex flex-row justify-content-between">
        <div class="card pb-2 m-2">
            <h5>About : </h5>
            <p style="background-color: #f4f2f2; border-radius:10px;" class="p-2">@Model.Description</p>
        </div>
        <div>
            <form class="w-100 p-2 mt-2 mb-1 border border-secondary rounded-lg" asp-controller="Groups" asp-action="CreateGroupPost" enctype="multipart/form-data">
                <textarea type="text" name="Content" id="emoji" class="w-100 h-25" placeholder="Write Content Post" required></textarea>
                <div class="d-flex justify-content-between pt-2 pb-2">
                    <input type="file" class="btn btn-outline-info" name="files" multiple required />
                    <input type="hidden" name="GroupId" value="@Model.Id" />
                    <button type="submit" class="btn btn-xs btn-primary">Submit</button>
                </div>
            </form>
            @foreach (var post in Model.Post.OrderByDescending(a => a.CreatedOn))
            {
                <div class="card">
                    <div class="d-flex justify-content-between p-2 px-3">
                        <div class="d-flex flex-row align-items-center">
                            @if (post.User.ProfilePicture != null)
                            {
                                @if (post.User.IsOnline == true)
                                {
                                    <img class="profile-actif" style="width:50px;" src="data:image/*;base64,@Convert.ToBase64String(post.User.ProfilePicture)">

                                }
                                else
                                {
                                    <img class="rounded-circle" style="width:50px;" src="data:image/*;base64,@Convert.ToBase64String(post.User.ProfilePicture)">
                                }
                            }
                            else
                            {
                                if (post.User.IsOnline == true)
                                {
                                    <img class="profile-actif" src="~/image/defaultProfile.png">

                                }
                                else
                                {
                                    <img style="width:40px;height:40px; object-fit:cover; border-radius:30px" src="~/image/defaultProfile.png">

                                }
                            }
                            <div class="d-flex flex-column ml-2">
                                <a asp-controller="User" asp-action="Profile" asp-route-id="@post.UserId" class="font-weight-bold">@post.User.FullName</a>
                                <small class="mr-2 muted-color">@post.CreatedOn</small>
                            </div>
                        </div>
                        <div>
                            @if (post.FavoritePost.SingleOrDefault(a => a.UserId == id && a.PostId == post.Id) == null)
                            {
                                <form method="post" asp-controller="Post" asp-action="FavoritePost">
                                    <input type="hidden" name="postId" value="@post.Id" />
                                    <button type="submit" class="btn btn-xs"><img src="~/image/not.png" /></button>
                                </form>
                            }
                            else
                            {
                                @foreach (var fPost in post.FavoritePost.Where(a => a.UserId == id))
                                {
                                    <form style="display:inline;" method="post" asp-controller="Post" asp-action="DeleteFavorite">
                                        <input type="hidden" name="Id" value="@fPost.Id" />
                                        <button type="submit" class="btn btn-xs"><img src="~/image/isSaved.png" /></button>
                                    </form>
                                }
                            }
                        </div>
                    </div>
                    <div>
                        <p class="text-justify text-dark">@post.Content</p>
                    </div>
                    <div class="contentImg">
                        @if (post.Images.Count == 1)
                        {
                            @foreach (var f in post.Images)
                            {
                                <img class="w-100" src="data:image/*;base64,@Convert.ToBase64String(f.Data)">
                            }



                        }
                        else
                        {
                            @foreach (var f in post.Images)
                            {
                                <img class="imgPost" src="data:image/*;base64,@Convert.ToBase64String(f.Data)">
                            }
                        }

                    </div>
                    <div class="p-2">

                        <div class="d-flex justify-content-between align-items-center">
                            <div class="d-flex flex-row align-items-center muted-color">
                                <form method="post" asp-controller="Groups" asp-action="LikeGroupPost">
                                    <input type="hidden" name="PostId" value="@post.Id" />
                                    <button type="submit" class="btn btn-outline-light"><img src="~/image/like.png" /></button>
                                </form>
                                <span class="p-2">@post.Likes.Count()</span>
                            </div>
                            <div class="d-flex flex-row muted-color">
                                <img src="~/image/comment.png" />
                                <span>@post.Comments.Count() comments</span>
                            </div>
                        </div>
                        <hr>
                        <form class="comment-input" id="form" method="post" asp-controller="Groups" asp-action="CreateGroupComment">
                            <input type="text" name="Content" class="form-control" placeholder="Write a comment..." />
                            <input type="hidden" name="PostId" value="@post.Id" />
                            <input type="hidden" name="UserId" value="@id" />
                            <button type="submit" class="btn btn-xs btn-primary d-none">Comment</button>
                        </form>
                        <hr>
                        <div class="comments">
                            @foreach (var i in post.Comments)
                            {
                                <div class="d-flex flex-row mb-2">
                                    <a asp-controller="User" asp-action="Profile" asp-route-id="@i.UserId">
                                        @if (i.User.ProfilePicture != null)
                                        {
                                            <img style="width:40px;height:40px; object-fit:cover; border-radius:30px" src="data:image/*;base64,@Convert.ToBase64String(i.User.ProfilePicture)">
                                        }
                                        else
                                        {
                                            <img style="width:40px;height:40px; object-fit:cover; border-radius:30px" src="~/image/defaultProfile.png">
                                        }
                                    </a>
                                    <div class="d-flex flex-column ml-2">
                                        <a asp-controller="User" asp-action="Profile" asp-route-id="@i.UserId" class="name">@i.User.FullName</a>
                                        <small class="comment-text">@i.Content</small>
                                        <div class="d-flex align-items-center muted-color"> <small>@i.CreatedOn</small></div>
                                    </div>
                                </div>
                            }

                        </div>
                    </div>
                </div>
                <hr>
            }
            
        </div>
        <div class="card pb-2 m-2">
            @if (Model.Members != null)
            {
                @foreach (var member in Model.Members)
                {
                    @if (member.User.ProfilePicture != null)
                    {
                        if (member.User.IsOnline == true)
                        {
                            <img class="profile-actif" src="data:image/*;base64,@Convert.ToBase64String(member.User.ProfilePicture)">
                        }
                        else
                        {
                            <img class="rounded-circle" style="width: 40px; height: 40px;" src="data:image/*;base64,@Convert.ToBase64String(member.User.ProfilePicture)">

                        }
                    }
                    else
                    {
                        if (member.User.IsOnline == true)
                        {
                            @*<p class="profile-actif">@item.FullName.Substring(0, 2).ToUpper()</p>*@
                            <img class="profile-actif" src="~/image/defaultProfile.png">

                        }
                        else
                        {
                            <img style="width:40px;height:40px; object-fit:cover; border-radius:30px" src="~/image/defaultProfile.png">
                        }

                    }
                    <p>@member.User.FullName</p>
                }
            }
        </div>
    </div>
</div>